/*----- PROTECTED REGION ID(TwoChannelAdapterStateMachine.cpp) ENABLED START -----*/
//=============================================================================
//
// file :        TwoChannelAdapterStateMachine.cpp
//
// description : State machine file for the TwoChannelAdapter class
//
// project :     
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
//
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================

#include <TwoChannelAdapter.h>

/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::TwoChannelAdapterStateMachine.cpp

//================================================================
//  States  |  Description
//================================================================
//  ON      |  
//  OFF     |  
//  MOVING  |  
//  FAULT   |  


namespace TwoChannelAdapter_ns
{
//=================================================
//		Attributes Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : TwoChannelAdapter::is_Position_allowed()
 *	Description : Execution allowed for Position attribute
 */
//--------------------------------------------------------
bool TwoChannelAdapter::is_Position_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for Position attribute in Write access.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::PositionStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::PositionStateAllowed_WRITE

	//	Not any excluded states for Position attribute in read access.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::PositionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::PositionStateAllowed_READ
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : TwoChannelAdapter::is_ZeroPosition_allowed()
 *	Description : Execution allowed for ZeroPosition attribute
 */
//--------------------------------------------------------
bool TwoChannelAdapter::is_ZeroPosition_allowed(TANGO_UNUSED(Tango::AttReqType type))
{
	//	Not any excluded states for ZeroPosition attribute in Write access.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::ZeroPositionStateAllowed_WRITE) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::ZeroPositionStateAllowed_WRITE

	//	Not any excluded states for ZeroPosition attribute in read access.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::ZeroPositionStateAllowed_READ) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::ZeroPositionStateAllowed_READ
	return true;
}


//=================================================
//		Commands Allowed Methods
//=================================================

//--------------------------------------------------------
/**
 *	Method      : TwoChannelAdapter::is_StopMove_allowed()
 *	Description : Execution allowed for StopMove attribute
 */
//--------------------------------------------------------
bool TwoChannelAdapter::is_StopMove_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for StopMove command.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::StopMoveStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::StopMoveStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : TwoChannelAdapter::is_ResetMotor_allowed()
 *	Description : Execution allowed for ResetMotor attribute
 */
//--------------------------------------------------------
bool TwoChannelAdapter::is_ResetMotor_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for ResetMotor command.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::ResetMotorStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::ResetMotorStateAllowed
	return true;
}

//--------------------------------------------------------
/**
 *	Method      : TwoChannelAdapter::is_Calibrate_allowed()
 *	Description : Execution allowed for Calibrate attribute
 */
//--------------------------------------------------------
bool TwoChannelAdapter::is_Calibrate_allowed(TANGO_UNUSED(const CORBA::Any &any))
{
	//	Not any excluded states for Calibrate command.
	/*----- PROTECTED REGION ID(TwoChannelAdapter::CalibrateStateAllowed) ENABLED START -----*/
	
	/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::CalibrateStateAllowed
	return true;
}


/*----- PROTECTED REGION ID(TwoChannelAdapter::TwoChannelAdapterStateAllowed.AdditionalMethods) ENABLED START -----*/

//	Additional Methods

/*----- PROTECTED REGION END -----*/	//	TwoChannelAdapter::TwoChannelAdapterStateAllowed.AdditionalMethods

}	//	End of namespace
